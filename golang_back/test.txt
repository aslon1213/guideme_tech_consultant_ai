
1. SELECT orderNumber, productCode, t1.quantityOrdered * t1.priceEach as overallprice
FROM orderdetails as t1 ORDER BY overallprice DESC





2. SELECT orderNumber, SUM(priceEach * quantityOrdered) AS totalOrderPrice
FROM orderdetails
GROUP BY orderNumber HAVING totalOrderPrice > 59000 ORDER BY totalOrderPrice DESC



3. SELECT t1.orderNumber,t2.orderDate,t2.status, SUM(t1.priceEach * t1.quantityOrdered) AS totalOrderPrice
FROM orderdetails as t1
INNER JOIN orders AS t2 ON t1.orderNumber = t2.orderNumber
GROUP BY orderNumber HAVING totalOrderPrice > 59000 ORDER BY totalOrderPrice DESC





4. SELECT t3.contactFirstName, t3.contactLastName,t3.country, t1.orderNumber,t2.orderDate,t2.status, SUM(t1.priceEach * t1.quantityOrdered) AS totalOrderPrice
FROM orderdetails as t1
INNER JOIN orders AS t2 ON t1.orderNumber = t2.orderNumber
INNER JOIN customers as t3 ON t2.customerNumber = t3.customerNumber
GROUP BY orderNumber HAVING totalOrderPrice > 59000 ORDER BY totalOrderPrice DESC




5. SELECT t2.productName, SUM(t1.priceEach * t1.quantityOrdered) AS totalOrderPrice 
FROM orderdetails as t1 
INNER JOIN products as t2 ON t1.productCode = t2.productCode
GROUP BY t2.productName ORDER BY totalOrderPrice DESC LIMIT 10






6. SELECT e.firstName,
e.lastName,
 c.contactFirstName,
c.contactLastName
FROM customers AS c
LEFT JOIN employees AS e ON c.salesRepEmployeeNumber = e.employeeNumber
UNION
SELECT e.firstName,
e.lastName,c.contactFirstName,
c.contactLastName
FROM customers AS c
RIGHT JOIN employees AS e ON c.salesRepEmployeeNumber = e.employeeNumber
WHERE c.salesRepEmployeeNumber IS NULL;






7. SELECT e1.firstName, e1.lastName, e1.jobTitle, e2.firstname as subFirstName, e2.lastname as subLastName
FROM employees as e1
JOIN employees as e2 ON e1.reportsTo = e2.employeeNumber
syntax = "proto3";


package toclassifier;
option go_package = "pkg/grpc/toclassifier";


service ToClassifier {
rpc TrainOnSavedDocuments (Username) returns (TrainResponse) {}
rpc TrainActions (stream ActionFull) returns (TrainResponse) {}
rpc TrainonSavedDocumentsJson (JsonData) returns (TrainResponse) {}
rpc QueryActions (Query) returns (ActionFull) {}

rpc GiveAudioAnswerForQuery (Query) returns (GeneralAnswer) {}
rpc GiveAudioAnswerOrJustTextAnswer(Query) returns (AudoWithText) {}

rpc SaveDocuments(Documents) returns (GeneralAnswer) {}
rpc GetGreetingMessage(Username) returns (GeneralAnswer) {}

// to classifier service
rpc ClassifyAndAnswer (Query) returns (GeneralAnswer) {}
rpc OpenChat (Query) returns (ChatID) {}
rpc CloseChat (ChatID) returns (GeneralAnswer) {}

}


message AudoWithText {
    bytes audio = 1;
    string text = 2;
}

message JsonData {
    repeated QuestionAnswerJson qa = 1;
    string username = 2;
}


message QuestionAnswerJson {
    string question = 1;
    string answer = 2;
}


message Username {
    string username = 1;
}

message Documents {
    bytes file_content = 1;
    string filename = 2;
    string file_type = 3;
    string username = 4;
}

message ChatID {
    string chat_id = 1;
}


message QueryAnswer {
    bool actions = 1;
    bytes answer = 2;
    float input_token_length = 3;
    int64 output_token_length = 4;
}


message GeneralAnswer {
    bytes answer = 1;
    string orJsonAnswer = 2;
    float input_token_length = 3;
    int64 output_token_length = 4;
}


message Query {
    string query = 1;
    string username = 2;
    string chat_id = 3;
    // int32 n_results = 3;
}

message ActionFull {
    string name = 1;
    // list of actions Action 
    repeated string properties = 2;
    string username = 4;
}
message Action {
    string type = 1;
    string element = 2;
    string value = 3;
}

// message Documents {
//     repeated Document file_content = 1;
//     string filename = 2;
//     string file_type = 3;
//     string username = 4;
// }


enum Categories {
    PDF = 0;
    TXT = 1;
}
message Document {
    bytes context = 1;
    string category = 2;
}


message TrainResponse {
    string message = 1;
    float input_token_length = 2;
    int64 output_token_length = 3;
}

message SearchRequest {
    string query = 1;
    string username = 2;
}

message ChatRequest {
    string username = 1;
    string text = 2;
}

message ChatResponse {
    string text = 1;
    float input_token_length = 2;
    int64 output_token_length = 3;
}
